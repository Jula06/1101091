

package try1;

import java.util.Scanner;

public class LAb04 {
    public static int maxsize = 5;       // ขนาดของคิว
    public static int[] queue = new int[maxsize]; // คิวที่เก็บข้อมูล
    public static int front = 0;         // ตำแหน่งของคิวที่จุดเริ่มต้น
    public static int rear = -1;         // ตำแหน่งสุดท้ายของคิว
    public static int count = 0;         // จำนวนข้อมูลในคิว

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int num;

        // วนลูปเพื่อทำการ Enqueue ข้อมูล
        
        for (int i = 0; i < maxsize; i++) {
            while (true) { // รับค่าจนกว่าจะได้ค่าที่มากกว่า 0
                System.out.print("Enqueue Data " + (i + 1) + " : ");
                num = scanner.nextInt();
                
                if (num > 0) { // ตรวจสอบว่าเลขที่ป้อนไม่ติดลบ
                    enqueue(num);
                    break;
                } else {
                    System.out.println("Please enter a number greater than 0.");
                }
            }
        }

        System.out.println("Queue is full.");
        System.out.println(" ");

        // ทำการ Dequeue และแสดงผลข้อมูลทั้งหมด
        
        for (int i = 0; i < maxsize; i++) {
            dequeue();
        }

        System.out.println("Queue is empty.");
        scanner.close();
    }

    // เมทอดสำหรับ Enqueue
    public static void enqueue(int num) {
        if (count == maxsize) {
            System.out.println("Queue is full.");
        } else {
            rear = (rear + 1) % maxsize; // วนลูปตำแหน่งเมื่อถึงจุดสิ้นสุด
            queue[rear] = num;           // ใส่ข้อมูลในคิว
            count++;                     // เพิ่มจำนวนข้อมูลในคิว
        }
    }

    // เมทอดสำหรับ Dequeue
    public static void dequeue() {
        if (count == 0) {
            System.out.println("Queue is empty.");
        } else {
            System.out.println("Dequeue Data : " + queue[front]); // แสดงผลข้อมูลที่นำออก
            front = (front + 1) % maxsize; // ขยับตำแหน่ง front ไปทางขวา
            count--;                      // ลดจำนวนข้อมูลในคิว
        }
    }
}
